{"version":3,"sources":["redux/actions/index.js","utilities/index.js","components/product/productList.js","components/product/productUI.js","redux/constants/actionType.js","components/cart/cart.js","components/cart/cartUI.js","App.js","serviceWorker.js","redux/reducers/productReducer.js","redux/reducers/cartReducer.js","redux/reducers/IncrementReducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["actualPrice","discount","ProductList","this","props","productData","cartData","onAddToCart","listing","map","item","className","key","id","name","price","Utilities","toFixed","type","onClick","Fragment","length","to","Component","ProductUI","fetchProducts","productReducer","addToCart","cartReducer","connect","state","items","dispatch","fetch","then","response","json","data","payload","product","cartItem","productAlreadyInCart","forEach","count","push","Cart","onRemoveFromCart","onIncrementedItem","incrementData","onDecrementedItem","reduce","a","c","totalPriceAfterDiscount","cartListing","value","CartUI","removeFromCart","incrementedItem","decrementedItem","IncrementReducer","slice","filter","it","val","App","exact","path","component","Boolean","window","location","hostname","match","initialState","AllReducers","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.87e6b746.chunk.js","sourcesContent":["import {\r\n  FETCH_PRODUCTS,\r\n  ADD_TO_CART,\r\n  REMOVE_FROM_CART,\r\n  INCREMENTED_ITEM,\r\n  DECREMENTED_ITEM\r\n} from \"../constants/actionType\";\r\n\r\nexport const fetchProducts = () => dispatch => {\r\n  fetch(\"https://api.myjson.com/bins/qhnfp\")\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return dispatch({\r\n        type: FETCH_PRODUCTS,\r\n        payload: data\r\n      });\r\n    });\r\n};\r\n\r\nexport const addToCart = (items, product) => dispatch => {\r\n  const cartItem = [...items];\r\n\r\n  let productAlreadyInCart = false;\r\n  cartItem.forEach(item => {\r\n    if (item.id === product.id) {\r\n      productAlreadyInCart = true;\r\n      item.count++;\r\n    }\r\n  });\r\n\r\n  if (!productAlreadyInCart) {\r\n    cartItem.push({\r\n      ...product,\r\n      count: 1\r\n    });\r\n  }\r\n\r\n  return dispatch({\r\n    type: ADD_TO_CART,\r\n    payload: {\r\n      cartItem: cartItem\r\n    }\r\n  });\r\n};\r\n\r\nexport const removeFromCart = (items, product) => dispatch => {\r\n  const cartItem = items.slice().filter(it => it.id !== product.id);\r\n  return dispatch({\r\n    type: REMOVE_FROM_CART,\r\n    payload: {\r\n      cartItem: cartItem\r\n    }\r\n  });\r\n};\r\n\r\nexport const incrementedItem = (val, item) => (dispatch) => {\r\n  return dispatch({\r\n    type: INCREMENTED_ITEM,\r\n    payload: val + 1\r\n  })\r\n}\r\n\r\n\r\nexport const decrementedItem = (val, item) => (dispatch) => {\r\n  return dispatch({\r\n    type: DECREMENTED_ITEM,\r\n    payload: val -1\r\n  })\r\n}\r\n","export default{\r\n    savePrice: function(actualPrice, discount){\r\n        return (actualPrice-(actualPrice * discount/100));\r\n    },\r\n}","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Utilities from \"../../utilities\";\r\n\r\nclass ProductList extends Component {\r\n  render() {\r\n    const { productData, cartData, onAddToCart } = this.props;\r\n    // console.log(this.props.cartData)\r\n    const listing = productData.map(item => {\r\n      return (\r\n        <div className=\"items\" key={item.id}>\r\n          {item.discount > 0 ? (\r\n            <span className=\"discount\">{item.discount}% </span>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <figure>\r\n            <figcaption>Image Not Available</figcaption>\r\n          </figure>\r\n\r\n          <div className=\"information\">\r\n            <p>\r\n              <mark>{item.name}</mark>\r\n            </p>\r\n\r\n            <div className=\"innerContainer\">\r\n              <div className=\"priceInfo\">\r\n                {item.discount ? (\r\n                  <span className=\"oldPrice\">${item.price}</span>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                <span className=\"newPrice\">\r\n                  ${Utilities.savePrice(`${item.price}`, `${item.discount}`).toFixed(2)}\r\n                </span>\r\n              </div>\r\n\r\n              <button\r\n                type=\"button\"\r\n                className=\"addToCartBtn\"\r\n                onClick={() => onAddToCart(cartData, item)}\r\n              >\r\n                Add to Cart\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"productHeader\">\r\n          <h3>All Items</h3>\r\n          {cartData.length > 0 ? (\r\n            <Link className=\"cartHeaderInfo\" to=\"/cart\">Go to Cart {cartData.length}</Link>\r\n          ) : (\r\n            <span className=\"cartHeaderInfo\">Go to Cart 0</span>\r\n          )}\r\n        </div>\r\n        <div className=\"productContainer\">{listing}</div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchProducts, addToCart } from \"../../redux/actions\";\r\n\r\nimport ProductList from \"./productList\";\r\n\r\nclass ProductUI extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchProducts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ProductList\r\n        productData={this.props.productReducer}\r\n        onAddToCart={this.props.addToCart}\r\n        cartData={this.props.cartReducer}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    productReducer: state.productReducer.items,\r\n    cartReducer: state.cartReducer.items\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchProducts, addToCart }\r\n)(ProductUI);\r\n","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS';\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\r\nexport const INCREMENTED_ITEM = 'INCREMENTED_ITEM';\r\nexport const DECREMENTED_ITEM = 'DECREMENTED_ITEM';","import React, { Component } from \"react\";\r\nimport Utilities from \"../../utilities\";\r\n\r\nclass Cart extends Component {\r\n  render() {\r\n    const {\r\n      cartData,\r\n      onRemoveFromCart,\r\n      onIncrementedItem,\r\n      incrementData,\r\n      onDecrementedItem\r\n    } = this.props;\r\n\r\n    let price =\r\n      cartData.reduce((a, c) => a + c.price * c.count, 0) * incrementData;\r\n    let discount = cartData.reduce(\r\n      (a, c) => a + (c.discount / 100) * c.price,\r\n      0\r\n    );\r\n\r\n    let totalPriceAfterDiscount = price - discount;\r\n\r\n    const cartListing = cartData.map(item => {\r\n      return (\r\n        <div className=\"cartInfo cartSubHeader\" key={item.id}>\r\n          <span className=\"cartSelection\">\r\n            {item.name}{\" \"}\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onRemoveFromCart(cartData, item)}\r\n              className=\"removeItem\"\r\n            >\r\n              X\r\n            </button>\r\n          </span>\r\n\r\n          <span className=\"cartButtonSelection\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onIncrementedItem(incrementData, item)}\r\n            >\r\n              +\r\n            </button>\r\n            <input type=\"number\" value={incrementData} />\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => onDecrementedItem(incrementData, item)}\r\n            >\r\n              -\r\n            </button>\r\n          </span>\r\n\r\n          <span className=\"cartPrice\">\r\n            $\r\n            {Utilities.savePrice(`${item.price}`, `${item.discount}`).toFixed(\r\n              2\r\n            ) * incrementData}\r\n          </span>\r\n        </div>\r\n      );\r\n    });\r\n    return (\r\n      <React.Fragment>\r\n        <h3 className=\"cartHead\">Order Summary</h3>\r\n        <div className=\"cartContainer\">\r\n          <div className=\"cartInner\">\r\n            <div className=\"cartSubHeader\">\r\n              <h4>Items ({cartData.length})</h4>\r\n\r\n              <h4>Qty</h4>\r\n\r\n              <h4>Price</h4>\r\n            </div>\r\n            {cartListing}\r\n          </div>\r\n\r\n          <div className=\"totalInfo\">\r\n            <strong>Total</strong>\r\n            <p className=\"cartTotalItems\">\r\n              <span className=\"\">Items ({cartData.length})</span>\r\n              <span>${price}</span>\r\n            </p>\r\n\r\n            <p className=\"cartTotalItems\">\r\n              <span className=\"\">Discount %</span>\r\n              <span>${discount}</span>\r\n            </p>\r\n\r\n            <p className=\"cartTotalItems cartTotal\">\r\n              <span className=\"\">Total Price</span>\r\n              <span>{totalPriceAfterDiscount}</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cart;\r\n","import React, { Component } from \"react\";\r\nimport Cart from \"./cart\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeFromCart, incrementedItem, decrementedItem } from \"../../redux/actions\";\r\n\r\nclass CartUI extends Component {\r\n  render() {\r\n    return (\r\n      <Cart\r\n        cartData={this.props.cartReducer}\r\n        onRemoveFromCart={this.props.removeFromCart}\r\n        onIncrementedItem = {this.props.incrementedItem}\r\n        onDecrementedItem = {this.props.decrementedItem}\r\n        incrementData = {this.props.IncrementReducer}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cartReducer: state.cartReducer.items,\r\n    IncrementReducer: state.IncrementReducer.items\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { removeFromCart, incrementedItem, decrementedItem }\r\n)(CartUI);\r\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport ProductUI from \"./components/product/productUI\";\nimport CartUI from \"./components/cart/cartUI\";\n\nimport \"./App.css\";\n\n\nfunction App() {\n  return (\n    <div className=\"mainContainer\">\n        <BrowserRouter>\n            <Route exact path=\"/\" component = {ProductUI} />\n            <Route path=\"/cart\" component = {CartUI} />\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    items: []\r\n};\r\nexport const productReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n            case 'FETCH_PRODUCTS':\r\n                return {...state, items: action.payload}\r\n              default:\r\n                return state;\r\n        }\r\n}","const initialState = {\r\n  items: []\r\n};\r\nexport const cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TO_CART\":\r\n      return { ...state, items: action.payload.cartItem };\r\n    case \"REMOVE_FROM_CART\":\r\n      return { ...state, items: action.payload.cartItem };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n    items: 1\r\n};\r\nexport const IncrementReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n            case 'INCREMENTED_ITEM':\r\n                return {...state, items: action.payload}\r\n                case 'DECREMENTED_ITEM':\r\n                    return {...state, items: action.payload}   \r\n              default:\r\n                return state;\r\n        }\r\n}","import { combineReducers } from 'redux';\r\nimport { productReducer } from './productReducer';\r\nimport { cartReducer } from './cartReducer';\r\nimport { IncrementReducer } from './IncrementReducer';\r\n\r\n\r\nexport const AllReducers = combineReducers({\r\n    productReducer: productReducer,\r\n    cartReducer: cartReducer,\r\n    IncrementReducer: IncrementReducer\r\n});","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { AllReducers } from \"../reducers\";\r\n\r\nexport const store = createStore(AllReducers, composeWithDevTools(\r\n    applyMiddleware(thunk),\r\n   \r\n  ));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(<Provider store = {store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}